name: Build, Push Docker Images, Create PR, and Deploy to AWS EC2

on:
  push:
    branches: [ "QA" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build --label "commit_sha=${{ github.sha }}" -t cristinacolcha/mi-app:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push cristinacolcha/mi-app:latest

 create-pull-request:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Find existing pull request and close it (if any)
        run: |
          PR_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&head=QA")
          
          if [ -n "$PR_URL" ]; then
            PR_NUMBER=$(echo $PR_URL | jq '.[0].number')
            curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"state":"closed"}' \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"
            echo "Closed existing PR: $PR_NUMBER"
          else
            echo "No open PR found."
          fi

      - name: Create new Pull Request from QA to Main
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          base: main       # Rama de destino (main)
          head: QA         # Rama de origen (QA)
          title: "Automated PR from QA to Main"
          body: "This is an automated PR created from the QA branch to main after the latest push."
          draft: false     # PR no serÃ¡ un borrador
  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Set permissions for private key
      run: |
        echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
        chmod 600 key.pem

    # Function to setup Docker and deploy
    - name: Update system, install Docker, and deploy to EC2
      run: |
        for HOST in ${{ secrets.AWS_EC2_HOST_QA1 }} ${{ secrets.AWS_EC2_HOST_QA2 }}
        do
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$HOST << 'EOF'
          # Update system and install Docker if not present
          sudo yum update -y
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found, installing..."
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker is already installed."
          fi

          # Deploy the latest Docker image
          sudo docker stop my-html-app || true
          sudo docker rm my-html-app || true
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-html-app:latest
          sudo docker run -d -p 8080:80 --name my-html-app ${{ secrets.DOCKERHUB_USERNAME }}/my-html-app:latest
          EOF
        done
